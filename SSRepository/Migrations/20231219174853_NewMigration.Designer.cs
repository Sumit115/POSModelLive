// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSRepository.Data;

#nullable disable

namespace SSRepository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231219174853_NewMigration")]
    partial class NewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SSRepository.Data.TblCustomerMas", b =>
                {
                    b.Property<long>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PkId"));

                    b.Property<string>("Aadhar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AadharCardBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AadharCardFront")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FKCreatedByID")
                        .HasColumnType("bigint");

                    b.Property<long>("FKUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gstno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsAadharVerify")
                        .HasColumnType("int");

                    b.Property<int?>("IsPanVerify")
                        .HasColumnType("int");

                    b.Property<string>("Marital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("PanCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Panno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Src")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("PkId");

                    b.ToTable("tblCustomer_mas");
                });

            modelBuilder.Entity("SSRepository.Data.TblUserMas", b =>
                {
                    b.Property<long>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PkId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirePwddt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Expiredt")
                        .HasColumnType("datetime2");

                    b.Property<long>("FKCreatedByID")
                        .HasColumnType("bigint");

                    b.Property<long>("FKUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("FkBranchId")
                        .HasColumnType("int");

                    b.Property<int>("FkEmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("FkRegId")
                        .HasColumnType("int");

                    b.Property<int?>("FkRoleId")
                        .HasColumnType("int");

                    b.Property<int>("IsAdmin")
                        .HasColumnType("int");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Src")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usertype")
                        .HasColumnType("int");

                    b.HasKey("PkId");

                    b.ToTable("tblUser_mas");
                });
#pragma warning restore 612, 618
        }
    }
}
