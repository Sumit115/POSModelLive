@model SSRepository.Models.RoleModel

@{
    ViewData["Title"] = "Role";
    ViewData["bdClass"] = "page";
}
<style>
    .table thead th {
        background: #dee2e6;
    }

    .main td:first-child {
        background: #f4f7fd;
    }

    .main-sub, .main-edit {
        display: none;
    }

        .main-sub td:first-child {
            background: #f4f7fd61;
            padding-left: 20px;
        }

        .main-edit td:first-child {
            padding-left: 40px;
        }
</style>
<div class="master-page-ui">
    <form asp-action="Create" class="g-3" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="PKID" />
        <div class="row">
            <div class="col-md-8">
                <div class="form-group row">
                    <label class="col-sm-2">Role Name</label>
                    <div class="col-md-6">
                        <input asp-for="RoleName" class="form-control" required />
                        <span asp-validation-for="RoleName" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 form-check form-switch p-0">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="col-5">Description</th>
                            <th class="col-1">Access</th>
                            <th class="col-1">Create</th>
                            <th class="col-1">Edit</th>
                            <th class="col-1">Print</th>
                            <th class="col-1">Browse</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.RoleDtls.Any())
                        {
                            @for (int i = 0; i < Model.RoleDtls.Count; i++)
                            {
                                if (Model.RoleDtls[i].SubMenu.Any())
                                {
                                    <tr class="main">
                                        <td colspan="6">

                                            <div class="btncolaps" style="padding: 0 9px;cursor: pointer;" onclick="Menucolaps(this,@Model.RoleDtls[i].FKFormID)">
                                                <label><i class="right fas fa-angle-right"></i></label>

                                                @Model.RoleDtls[i].FormName
                                            </div>
                                            @Html.HiddenFor(m => m.RoleDtls[i].FormName)
                                            @Html.HiddenFor(m => m.RoleDtls[i].PkRoleDtlId)
                                            @Html.HiddenFor(m => m.RoleDtls[i].FKFormID)
                                            @Html.HiddenFor(m => m.RoleDtls[i].FkRoleID)
                                        </td>
                                    </tr>
                                    @for (int j = 0; j < Model.RoleDtls[i].SubMenu.Count; j++)
                                    {
                                        if (Model.RoleDtls[i].SubMenu[j].SubMenu.Any())
                                        {
                                            <tr key="@Model.RoleDtls[i].FKFormID" class="main-sub" parent="@Model.RoleDtls[i].SubMenu[j].FKFormID">
                                                <td colspan="6">


                                                    <div class="btncolaps" style="padding:0 9px;cursor: pointer;" onclick="Menucolaps(this,@Model.RoleDtls[i].SubMenu[j].FKFormID)">
                                                        <label><i class="right fas fa-angle-right"></i></label>

                                                        @Model.RoleDtls[i].SubMenu[j].FormName
                                                    </div>
                                                    @Html.HiddenFor(m => m.RoleDtls[i].FormName)
                                                    @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].PkRoleDtlId)
                                                    @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].FKFormID)
                                                    @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].FkRoleID)
                                                </td>
                                            </tr>
                                            @for (int k = 0; k < Model.RoleDtls[i].SubMenu[j].SubMenu.Count; k++)
                                            {
                                                <tr key="@Model.RoleDtls[i].SubMenu[j].FKFormID" class="main-edit">
                                                    <td class="col-5">
                                                        @Html.TextBoxFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].FormName, new { @readonly = true, @tabindex = "-1" })
                                                        @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].PkRoleDtlId)
                                                        @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].FKFormID)
                                                        @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].FkRoleID)
                                                    </td>
                                                    <td class="col-1">
                                                        @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].IsAccess, new { @class = "form-check-input" })
                                                    </td>
                                                    <td class="col-1">
                                                        @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].IsCreate, new { @class = "form-check-input" })
                                                    </td>
                                                    <td class="col-1">
                                                        @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].IsEdit, new { @class = "form-check-input" })
                                                    </td>
                                                    <td class="col-1">
                                                        @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].IsPrint, new { @class = "form-check-input" })
                                                    </td>
                                                    <td class="col-1">
                                                        @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].SubMenu[k].IsBrowse, new { @class = "form-check-input" })
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {

                                            <tr class="main-edit" key="@Model.RoleDtls[i].FKFormID">
                                                <td class="col-5">
                                                    @Html.TextBoxFor(m => m.RoleDtls[i].SubMenu[j].FormName, new { @readonly = true, @tabindex = "-1" })
                                                    @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].PkRoleDtlId)
                                                    @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].FKFormID)
                                                    @Html.HiddenFor(m => m.RoleDtls[i].SubMenu[j].FkRoleID)
                                                </td>
                                                <td class="col-1">
                                                    @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].IsAccess, new { @class = "form-check-input" })
                                                </td>
                                                <td class="col-1">
                                                    @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].IsCreate, new { @class = "form-check-input" })
                                                </td>
                                                <td class="col-1">
                                                    @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].IsEdit, new { @class = "form-check-input" })
                                                </td>
                                                <td class="col-1">
                                                    @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].IsPrint, new { @class = "form-check-input" })
                                                </td>
                                                <td class="col-1">
                                                    @Html.CheckBoxFor(m => m.RoleDtls[i].SubMenu[j].IsBrowse, new { @class = "form-check-input" })
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                                else
                                {

                                    <tr class="main">
                                        <td class="col-5">
                                            @Html.TextBoxFor(m => m.RoleDtls[i].FormName, new { @readonly = true, @tabindex = "-1" })
                                            @Html.HiddenFor(m => m.RoleDtls[i].PkRoleDtlId)
                                            @Html.HiddenFor(m => m.RoleDtls[i].FKFormID)
                                            @Html.HiddenFor(m => m.RoleDtls[i].FkRoleID)
                                        </td>
                                        <td class="col-1">
                                            @Html.CheckBoxFor(m => m.RoleDtls[i].IsAccess, new { @class = "form-check-input" })
                                        </td>
                                        <td class="col-1">
                                            @Html.CheckBoxFor(m => m.RoleDtls[i].IsCreate, new { @class = "form-check-input" })
                                        </td>
                                        <td class="col-1">
                                            @Html.CheckBoxFor(m => m.RoleDtls[i].IsEdit, new { @class = "form-check-input" })
                                        </td>
                                        <td class="col-1">
                                            @Html.CheckBoxFor(m => m.RoleDtls[i].IsPrint, new { @class = "form-check-input" })
                                        </td>
                                        <td class="col-1">
                                            @Html.CheckBoxFor(m => m.RoleDtls[i].IsBrowse, new { @class = "form-check-input" })
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </form>
</div>
<input type="hidden" id="hdData" value="@ViewBag.Data" />

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/master/role.js"></script>

}